{"version":3,"sources":["views/groups/list/columns.js","views/groups/list/index.js"],"names":["renderOg","row","color","Math","floor","random","name","og_avatar","length","className","img","imgHeight","imgWidth","content","initials","renderOwg","owing_organiztion","owg_avatar","width","height","owg_name","columns","sortable","minWidth","sortField","cell","og_name","to","services","users","type","status","renderStatus","on","id","defaultChecked","renderSwitch","tag","size","Link","onClick","store","dispatch","getUser","href","e","preventDefault","deleteUser","CustomHeader","handleFilter","value","handleStatusValue","statusValue","onChange","onSubmit","target","placeholder","GroupList","useDispatch","useSelector","state","groupList","useState","setValue","sort","setSort","sortColumn","setSortColumn","currentPage","setCurrentPage","setStatusValue","rowsPerPage","useEffect","getData","q","page","data","breadCrumbTitle","breadCrumbParent","breadCrumbActive","noHeader","pagination","sortServer","paginationServer","subHeader","responsive","onSort","column","sortDirection","perPage","filters","isFiltered","Object","keys","some","k","allData","slice","dataToRender","sortIcon","defaultSortField","paginationDefaultPage","paginationComponent","count","Number","total","toFixed","nextLabel","breakLabel","previousLabel","pageCount","activeClassName","breakClassName","pageClassName","breakLinkClassName","nextLinkClassName","pageLinkClassName","nextClassName","previousLinkClassName","previousClassName","onPageChange","selected","handlePagination","forcePage","containerClassName","subHeaderComponent","val","selectableRows","pointerOnHover","rowHeight"],"mappings":"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","file":"static/js/160.776b4237.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Badge,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  UncontrolledTooltip,\r\n  UncontrolledDropdown,\r\n  Row,\r\n  Label,\r\n  Input\r\n} from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport {\r\n  Eye,\r\n  Send,\r\n  Edit,\r\n  Copy,\r\n  Save,\r\n  Info,\r\n  Trash,\r\n  PieChart,\r\n  Download,\r\n  TrendingUp,\r\n  CheckCircle,\r\n  MoreVertical,\r\n  ArrowDownCircle,\r\n  Fileinput,\r\n  FileText,\r\n  Archive,\r\n  Trash2\r\n} from 'react-feather'\r\n// ** Icons Imports\r\n\r\n// ** Reactstrap Imports\r\n\r\n// ** Vars\r\nconst renderOg = row => {\r\n  const stateNum = Math.floor(Math.random() * 6),\r\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\r\n    color = states[stateNum]\r\n\r\n  if (row.name.og_avatar.length) {\r\n    return <Avatar className='me-50 og_avatar' img={row.name.og_avatar} imgHeight={45} imgWidth={45}/>\r\n  } else {\r\n    return <Avatar color={color} className='me-50' content={row.name ? row.name.name : 'No name'} initials />\r\n  }\r\n}\r\n\r\nconst renderOwg = row => {\r\n  const stateNum = Math.floor(Math.random() * 6),\r\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\r\n    color = states[stateNum]\r\n\r\n  if (row.owing_organiztion.owg_avatar.length) {\r\n    return <Avatar className='me-50' img={row.owing_organiztion.owg_avatar} width='32' height='32' />\r\n  } else {\r\n    return <Avatar color={color} className='me-50' content={row.owing_organiztion.owg_name ? row.owing_organiztion.owg_name : 'No name'} initials />\r\n  }\r\n}\r\n\r\nconst renderStatus = row => {\r\n  const active = row.status\r\n  if (active === 1) {\r\n    return <row>\r\n      <div className=\"act\">Active</div>\r\n      <div>since 21 Jan 2021</div>\r\n    </row>\r\n  } else {\r\n    return <row>\r\n      <div className=\"noact\">Not Active</div>\r\n      <div>since 21 Jan 2021</div>\r\n    </row>\r\n  }\r\n}\r\n\r\nconst renderSwitch = row => {\r\n  const on = row.status\r\n  if (on) {\r\n    return <div className='d-flex flex-column'>\r\n        <div className='form-switch form-check-primary'>\r\n          <Input type='switch' id='switch-primary' name='primary' defaultChecked={!on}/>\r\n        </div>\r\n      </div>\r\n  } else {\r\n    return <div className='d-flex flex-column'>\r\n      <div className='form-switch form-check-primary'>\r\n        <Input type='switch' id='switch-primary' name='primary' defaultChecked={!on}/>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\n// ** Table columns\r\nexport const columns = [\r\n  {\r\n    name: 'name',\r\n    sortable: true,\r\n    minWidth: '260px',\r\n    sortField: 'name.og_name',\r\n    // selector: row => row.client.name,\r\n    cell: row => {\r\n      const og_name = row.name.og_name ? row.name.og_name : 'No name'\r\n      return (\r\n        <Link to={`/groups/details/1`}>\r\n          <div className='d-flex justify-content-left align-items-center'>\r\n            {renderOg(row)}\r\n            <div className='d-flex flex-column'>\r\n              <h6 className='user-name text-truncate mb-0'>{og_name}</h6>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    name: 'Services',\r\n    sortable: true,\r\n    minWidth: '300px',\r\n    sortField: 'services',\r\n    // selector: row => row.total,\r\n    cell: row => <Link to={`/groups/details/1`}><div className=\"pad_b-5\">{row.services}</div></Link>\r\n  },\r\n  {\r\n    name: 'Owing Organation',\r\n    sortable: true,\r\n    minWidth: '200px',\r\n    sortField: 'owing_organiztion.owg_name',\r\n    // selector: row => row.client.name,\r\n    cell: row => {\r\n      const owg_name = row.owing_organiztion.owg_name ? row.owing_organiztion.owg_name : 'No name'\r\n      return (\r\n        <Link to={`/groups/details/1`}>\r\n        <div className='d-flex justify-content-left align-items-center'>\r\n          {renderOwg(row)}\r\n          <div className='d-flex flex-column'>\r\n            <h6 className='user-name text-truncate mb-0'>{owg_name}</h6>\r\n          </div>\r\n        </div>\r\n        </Link>\r\n      )\r\n    }\r\n  },\r\n  {\r\n    name: 'Users',\r\n    sortable: true,\r\n    minWidth: '150px',\r\n    sortField: 'users',\r\n    // selector: row => row.total,\r\n    cell: row => <Link to={`/groups/details/1`}><span>{row.users}</span></Link>\r\n  },\r\n  {\r\n    name: 'Type',\r\n    sortable: true,\r\n    minWidth: '150px',\r\n    sortField: 'type',\r\n    // selector: row => row.total,\r\n    cell: row => <Link to={`/groups/details/1`}><span>{row.type}</span></Link>\r\n  },\r\n  {\r\n    name: 'Status',\r\n    minWidth: '170px',\r\n    // selector: row => row.total,\r\n    cell: row => (renderStatus(row))\r\n  },\r\n  {\r\n    name: 'Activation',\r\n    minWidth: '120px',\r\n    // selector: row => row.total,\r\n    cell: row => (renderSwitch(row))\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    minWidth: '150px',\r\n    // selector: row => row.total,\r\n    cell: row => (\r\n      <div className='column-action float-right'>\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle tag='div' className='btn btn-sm'>\r\n            <MoreVertical size={20} className='cursor-pointer' />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem\r\n              tag={Link}\r\n              className='w-100'\r\n              to={`/apps/user/view/${row.id}`}\r\n              onClick={() => store.dispatch(getUser(row.id))}\r\n            >\r\n              <FileText size={14} className='me-50' />\r\n              <span className='align-middle'>Details</span>\r\n            </DropdownItem>\r\n            <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\r\n              <Archive size={14} className='me-50' />\r\n              <span className='align-middle'>Edit</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag='a'\r\n              href='/'\r\n              className='w-100'\r\n              onClick={e => {\r\n                e.preventDefault()\r\n                store.dispatch(deleteUser(row.id))\r\n              }}\r\n            >\r\n              <Trash2 size={14} className='me-50' />\r\n              <span className='align-middle'>Delete</span>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown, Search, PlusCircle  } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\n// ** Reactstrap Imports\r\nimport { Button, Input, Row, Col, Card, Form, InputGroup, InputGroupText } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { getData } from './store'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-invoice.scss'\r\nimport '@styles/react/group/group-list.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\nconst CustomHeader = ({ handleFilter, value, handleStatusValue, statusValue }) => {\r\n  return (\r\n    <div className='invoice-list-table-header w-100 py-2'>\r\n      <Row>\r\n        <Col className='d-flex align-items-center px-0 px-lg-1 col-lg-12'>\r\n          <Input className='w-auto ' type='select' value={statusValue} onChange={handleStatusValue}>\r\n            <option value=''>Orgnization</option>\r\n            <option value='downloaded'>Downloaded</option>\r\n            <option value='draft'>Draft</option>\r\n            <option value='paid'>Paid</option>\r\n            <option value='partial payment'>Partial Payment</option>\r\n            <option value='past due'>Past Due</option>\r\n            <option value='sent'>Sent</option>\r\n          </Input>\r\n          <Form className='faq-search-input flex-grow-1 px-2' onSubmit={e => e.preventDefault()}>\r\n            <InputGroup className='input-group-merge'>\r\n              <Input\r\n                id='orgnization-search'\r\n                className=''\r\n                type='text'\r\n                value={value}\r\n                onChange={e => handleFilter(e.target.value)}\r\n                placeholder='Search by Filename or Params'\r\n              />\r\n              <InputGroupText>\r\n                <Search size={14}/>\r\n              </InputGroupText>\r\n            </InputGroup>\r\n          </Form>\r\n          <Button tag={Link} to='/groups/list/add' color='success'>\r\n            <PlusCircle size={20} className=\"me-1\"/>\r\n            Add Record\r\n          </Button>\r\n          \r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst GroupList = () => {\r\n  // ** Store vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.groupList)\r\n\r\n  // ** States\r\n  const [value, setValue] = useState('')\r\n  const [sort, setSort] = useState('desc')\r\n  const [sortColumn, setSortColumn] = useState('name')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [statusValue, setStatusValue] = useState('')\r\n  const rowsPerPage  = 10\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: value,\r\n        sortColumn,\r\n        page: currentPage,\r\n        status: statusValue\r\n      })\r\n    )\r\n  }, [dispatch, store.data.length])\r\n\r\n  const handleFilter = val => {\r\n    setValue(val)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        status: statusValue\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleStatusValue = e => {\r\n    setStatusValue(e.target.value)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: value,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        status: e.target.value\r\n      })\r\n    )\r\n  }\r\n\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: value,\r\n        sortColumn,\r\n        status: statusValue,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const CustomPagination = () => {\r\n    const count = Number((store.total / rowsPerPage).toFixed(0))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        nextLabel=''\r\n        breakLabel='...'\r\n        previousLabel=''\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        breakClassName='page-item'\r\n        pageClassName={'page-item'}\r\n        breakLinkClassName='page-link'\r\n        nextLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousLinkClassName={'page-link'}\r\n        previousClassName={'page-item prev'}\r\n        onPageChange={page => handlePagination(page)}\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        containerClassName={'pagination react-paginate justify-content-end p-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      q: value,\r\n      status: statusValue\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      return store.allData.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getData({\r\n        q: value,\r\n        page: currentPage,\r\n        sort: sortDirection,\r\n        status: statusValue,\r\n        perPage: rowsPerPage,\r\n        sortColumn: column.sortField\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='invoice-list-wrapper'>\r\n      <Breadcrumbs breadCrumbTitle='Groups' breadCrumbParent='Orgnizations' breadCrumbActive='Groups' />\r\n      <Card>\r\n        <div className='invoice-list-dataTable react-dataTable'>\r\n          <DataTable\r\n            noHeader\r\n            pagination\r\n            sortServer\r\n            paginationServer\r\n            subHeader={true}\r\n            columns={columns}\r\n            responsive={true}\r\n            onSort={handleSort}\r\n            data={dataToRender()}\r\n            sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            defaultSortField='invoiceId'\r\n            paginationDefaultPage={currentPage}\r\n            paginationComponent={CustomPagination}\r\n            subHeaderComponent={\r\n              <CustomHeader\r\n                value={value}\r\n                statusValue={statusValue}\r\n                rowsPerPage={rowsPerPage}\r\n                handleFilter={handleFilter}\r\n                handleStatusValue={handleStatusValue}\r\n              />\r\n            }\r\n            selectableRows\r\n            pointerOnHover\r\n            rowHeight={300}\r\n\r\n          />\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GroupList\r\n"],"sourceRoot":""}